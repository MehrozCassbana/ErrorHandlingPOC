plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

apply from: 'version_utils.gradle'

android {

    def androidVersions = rootProject.ext.android


    defaultConfig {
        applicationId "com.bykea.task"
        compileSdkVersion androidVersions.compileSdkVersion

        minSdkVersion androidVersions.minSdkVersion
        targetSdkVersion androidVersions.targetSdkVersion
        versionCode buildVersionCode()
        versionName buildVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {

        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix '.debug'
            versionNameSuffix ".debug"
            buildConfigField "String", "BASE_URL", baseUrl
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }

        stagging {
            debuggable true
            minifyEnabled false
            applicationIdSuffix '.stagging'
            versionNameSuffix ".stagging"
            buildConfigField "String", "BASE_URL", baseUrl
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            buildConfigField "String", "BASE_URL", baseUrl
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
    }

    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res/layouts/activities',
                            'src/main/res/layouts/fragments',
                            'src/main/res/layouts/items',
                            'src/main/res/layouts/custom',
                            'src/main/res/layouts',
                            'src/main/res'
                    ]
        }
    }
}

dependencies {

    def commonDependencies = rootProject.ext.commonDependencies

    def developmentDependencies = rootProject.ext.developmentDependencies
    def commonTestDependencies = rootProject.ext.commonTestDependencies


    implementation commonDependencies.androidxAppCompat
    implementation commonDependencies.androidxCore
    implementation commonDependencies.androidxReactiveStreans
    implementation commonDependencies.kotlin
    implementation commonDependencies.constraintLayout
    implementation commonDependencies.androidArchExt
    implementation commonDependencies.coroutinesCore
    implementation commonDependencies.coroutinesAndroid
    implementation commonDependencies.androidxAppCompat
    implementation commonDependencies.coroutinesAndroid
    implementation commonDependencies.material
    implementation commonDependencies.navigationFragment
    implementation commonDependencies.navigation

    implementation commonDependencies.roomRuntime
    kapt commonDependencies.roomAp

    // Dependency injection
    implementation developmentDependencies.daggerHilt
    kapt developmentDependencies.daggerHiltAndroidComipler
    implementation developmentDependencies.daggerHiltViewModel
    kapt developmentDependencies.daggerHiltCompiler

    // Networking
    implementation developmentDependencies.retrofitConverter
    implementation developmentDependencies.retrofit
    implementation developmentDependencies.okhttp
    implementation developmentDependencies.okhttpInterceptor

    // Room
    implementation commonDependencies.roomRuntime
    kapt commonDependencies.roomAp
    implementation commonDependencies.roomktx

    // WorkManger
    implementation developmentDependencies.workManager

    // Timber
    implementation developmentDependencies.timber

    // Coil
    implementation developmentDependencies.coil

    implementation developmentDependencies.rxAndroid

    androidTestImplementation commonTestDependencies.junit
    androidTestImplementation commonTestDependencies.esspressoCore
    implementation developmentDependencies.gson
    implementation developmentDependencies.liveData
    implementation developmentDependencies.liveDataExtensions
    implementation developmentDependencies.viewModel
    implementation developmentDependencies.preference
    implementation developmentDependencies.permission

    debugImplementation developmentDependencies.chuck
    releaseImplementation developmentDependencies.chuckNoOp

}


repositories {
    mavenCentral()
}